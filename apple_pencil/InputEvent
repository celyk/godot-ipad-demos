<html>
<head>
    <title>Class InputEvent</title>
    <style>
    :root {
        color-scheme: light dark;
        --color-background: #ffffff;
        --color-text: #333333;
        --color-link: #0366d6;
        --color-code-background: #f6f8fa;
        --color-code-text: #24292e;
        --color-aside-background: #f6f8fa;
        --color-aside-border: #dfe2e5;
        --color-header-background: #f6f8fa;
        --color-signature-background: #f1f8ff;
        --font-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
        --font-mono: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
        --font-size-code: 14px;
    }
    
    @media (prefers-color-scheme: dark) {
        :root {
            --color-background: #0d1117;
            --color-text: #c9d1d9;
            --color-link: #58a6ff;
            --color-code-background: #161b22;
            --color-code-text: #c9d1d9;
            --color-aside-background: #161b22;
            --color-aside-border: #30363d;
            --color-header-background: #161b22;
            --color-signature-background: #1d2d3e;
        }
    }
    
    body {
        font-family: var(--font-sans);
        line-height: 1.5;
        color: var(--color-text);
        background-color: var(--color-background);
        margin: 0;
        padding: 20px;
    }
    
    h1, h2, h3 {
        margin-top: 24px;
        margin-bottom: 16px;
        font-weight: 600;
        line-height: 1.25;
    }
    
    h1 {
        font-size: 2em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h2 {
        font-size: 1.5em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h3 {
        font-size: 1.25em;
    }
    
    a {
        color: var(--color-link);
        text-decoration: none;
    }
    
    a:hover {
        text-decoration: underline;
    }
    
    code, pre {
        font-family: var(--font-mono);
        font-size: var(--font-size-code);
    }
    
    pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 16px;
        overflow: auto;
    }
    
    pre code {
        background-color: transparent;
        padding: 0;
    }
    
    .signature {
        background-color: var(--color-signature-background);
        padding: 16px;
        border-radius: 6px;
        margin-bottom: 16px;
    }
    
    .description {
        margin-bottom: 16px;
    }
    
    aside {
        background-color: var(--color-aside-background);
        border-left: 4px solid var(--color-aside-border);
        border-radius: 3px;
        padding: 16px;
        margin-bottom: 16px;
    }
    
    aside .label {
        font-weight: 600;
        margin: 0 0 8px;
    }
    
    .member {
        margin-bottom: 24px;
    }
    
    .enumvalue {
        margin-left: 16px;
    }
    
    .deprecated, .experimental {
        font-weight: 600;
        color: #d73a49;
    }
    
    ul {
        padding-left: 24px;
    }
    
    .signature code, .member code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    .signature pre, .member pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 12px;
        margin: 0;
        overflow: auto;
    }
    
    .signature pre code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    p code, li code {
        background-color: var(--color-code-background);
        border-radius: 3px;
        padding: 2px 4px;
    }
    
    .section-divider {
        border: none;
        border-top: 2px solid var(--color-divider);
        margin: 20px 0;
    }
    </style>
</head>
<body>
<h3 class='secondary'>Class</h3>
<h1>InputEvent</h1>
<p>
		Abstract base class for input events.
	</p>
<hr>
<h2>Description</h2>
<p></aside>

<p>Abstract base class of all types of input events. See <a href='godot:Node#_input'><code class='method'>Node._input</code></a>.</aside>

<p></aside>

<h2>Tutorials</h2>
<ul>
    <li><a href="open-external:https://docs.godotengine.org/en/4.2/tutorials/inputs/inputevent.html">Using InputEvent</a>
</ul>
<h2>Topics</h2>
<h3>Properties</h3>
<a id='a-device' name='device'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  device: <a href="godot:int">int</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>The event's device ID.</aside>

<p><aside class='note'><p class='label'>Note:</p> <a href='#device'><code class='member'>device</code></a> can be negative for special use cases that don't refer to devices physically present on the system. See <code class='constant'><a href='#DEVICE_ID_EMULATION'>DEVICE_ID_EMULATION</a></code>.</aside>

<p></aside>

</div>
</div>
<h3>Methods</h3>
<a id='a-accumulate' name='accumulate'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func accumulate(with_event: <a href="godot:InputEvent">InputEvent</a>) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the given input event and this input event can be added together (only for events of type <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a>).</aside>

<p>The given input event's position, global position and speed will be copied. The resulting <code>relative</code> is a sum of both events. Both events' modifiers have to be identical.</aside>

<p></aside>

</div>
</div>
<a id='a-as_text' name='as_text'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func as_text() -> <a href="godot:String">String</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns a <a href="godot:String"><code class='typeref'>String</code></a> representation of the event.</aside>

<p></aside>

</div>
</div>
<a id='a-get_action_strength' name='get_action_strength'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func get_action_strength(action: <a href="godot:StringName">StringName</a>, exact_match: <a href="godot:bool">bool</a> = false) -> <a href="godot:float">float</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns a value between 0.0 and 1.0 depending on the given actions' state. Useful for getting the value of events of type <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a>.</aside>

<p>If <code class='param'>exact_match</code> is <code>false</code>, it ignores additional input modifiers for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> and <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> events, and the direction for <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> events.</aside>

<p></aside>

</div>
</div>
<a id='a-is_action' name='is_action'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_action(action: <a href="godot:StringName">StringName</a>, exact_match: <a href="godot:bool">bool</a> = false) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event matches a pre-defined action of any type.</aside>

<p>If <code class='param'>exact_match</code> is <code>false</code>, it ignores additional input modifiers for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> and <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> events, and the direction for <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> events.</aside>

<p></aside>

</div>
</div>
<a id='a-is_action_pressed' name='is_action_pressed'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_action_pressed(action: <a href="godot:StringName">StringName</a>, allow_echo: <a href="godot:bool">bool</a> = false, exact_match: <a href="godot:bool">bool</a> = false) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the given action is being pressed (and is not an echo event for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> events, unless <code class='param'>allow_echo</code> is <code>true</code>). Not relevant for events of type <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a> or <a href="godot:InputEventScreenDrag"><code class='typeref'>InputEventScreenDrag</code></a>.</aside>

<p>If <code class='param'>exact_match</code> is <code>false</code>, it ignores additional input modifiers for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> and <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> events, and the direction for <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> events.</aside>

<p><aside class='note'><p class='label'>Note:</p> Due to keyboard ghosting, <a href='#is_action_pressed'><code class='method'>is_action_pressed</code></a> may return <code>false</code> even if one of the action's keys is pressed. See <a href="https://docs.godotengine.org/en/4.2//tutorials/inputs/input_examples.html#keyboard-events">Input examples</a> in the documentation for more information.</aside>

<p></aside>

</div>
</div>
<a id='a-is_action_released' name='is_action_released'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_action_released(action: <a href="godot:StringName">StringName</a>, exact_match: <a href="godot:bool">bool</a> = false) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the given action is released (i.e. not pressed). Not relevant for events of type <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a> or <a href="godot:InputEventScreenDrag"><code class='typeref'>InputEventScreenDrag</code></a>.</aside>

<p>If <code class='param'>exact_match</code> is <code>false</code>, it ignores additional input modifiers for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> and <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> events, and the direction for <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> events.</aside>

<p></aside>

</div>
</div>
<a id='a-is_action_type' name='is_action_type'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_action_type() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event's type is one that can be assigned to an input action.</aside>

<p></aside>

</div>
</div>
<a id='a-is_canceled' name='is_canceled'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_canceled() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event has been canceled.</aside>

<p></aside>

</div>
</div>
<a id='a-is_echo' name='is_echo'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_echo() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event is an echo event (only for events of type <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a>). An echo event is a repeated key event sent when the user is holding down the key. Any other event type returns <code>false</code>.</aside>

<p><aside class='note'><p class='label'>Note:</p> The rate at which echo events are sent is typically around 20 events per second (after holding down the key for roughly half a second). However, the key repeat delay/speed can be changed by the user or disabled entirely in the operating system settings. To ensure your project works correctly on all configurations, do not assume the user has a specific key repeat configuration in your project's behavior.</aside>

<p></aside>

</div>
</div>
<a id='a-is_match' name='is_match'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_match(event: <a href="godot:InputEvent">InputEvent</a>, exact_match: <a href="godot:bool">bool</a> = true) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the specified <code class='param'>event</code> matches this event. Only valid for action events i.e key (<a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a>), button (<a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> or <a href="godot:InputEventJoypadButton"><code class='typeref'>InputEventJoypadButton</code></a>), axis <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> or action (<a href="godot:InputEventAction"><code class='typeref'>InputEventAction</code></a>) events.</aside>

<p>If <code class='param'>exact_match</code> is <code>false</code>, it ignores additional input modifiers for <a href="godot:InputEventKey"><code class='typeref'>InputEventKey</code></a> and <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a> events, and the direction for <a href="godot:InputEventJoypadMotion"><code class='typeref'>InputEventJoypadMotion</code></a> events.</aside>

<p></aside>

</div>
</div>
<a id='a-is_pressed' name='is_pressed'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_pressed() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event is pressed. Not relevant for events of type <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a> or <a href="godot:InputEventScreenDrag"><code class='typeref'>InputEventScreenDrag</code></a>.</aside>

<p><aside class='note'><p class='label'>Note:</p> Due to keyboard ghosting, <a href='#is_pressed'><code class='method'>is_pressed</code></a> may return <code>false</code> even if one of the action's keys is pressed. See <a href="https://docs.godotengine.org/en/4.2//tutorials/inputs/input_examples.html#keyboard-events">Input examples</a> in the documentation for more information.</aside>

<p></aside>

</div>
</div>
<a id='a-is_released' name='is_released'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_released() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if this input event is released. Not relevant for events of type <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a> or <a href="godot:InputEventScreenDrag"><code class='typeref'>InputEventScreenDrag</code></a>.</aside>

<p></aside>

</div>
</div>
<a id='a-xformed_by' name='xformed_by'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func xformed_by(xform: <a href="godot:Transform2D">Transform2D</a>, local_ofs: <a href="godot:Vector2">Vector2</a> = Vector2(0, 0)) -> <a href="godot:InputEvent">InputEvent</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns a copy of the given input event which has been offset by <code class='param'>local_ofs</code> and transformed by <code class='param'>xform</code>. Relevant for events of type <a href="godot:InputEventMouseButton"><code class='typeref'>InputEventMouseButton</code></a>, <a href="godot:InputEventMouseMotion"><code class='typeref'>InputEventMouseMotion</code></a>, <a href="godot:InputEventScreenTouch"><code class='typeref'>InputEventScreenTouch</code></a>, <a href="godot:InputEventScreenDrag"><code class='typeref'>InputEventScreenDrag</code></a>, <a href="godot:InputEventMagnifyGesture"><code class='typeref'>InputEventMagnifyGesture</code></a> and <a href="godot:InputEventPanGesture"><code class='typeref'>InputEventPanGesture</code></a>.</aside>

<p></aside>

</div>
</div>
<h3>Constants</h3>
<ul>
<a id='a-DEVICE_ID_EMULATION' name='DEVICE_ID_EMULATION'></a>
<li><code>DEVICE_ID_EMULATION = <span class='secondary'>-1</span></code>
<div class='description'>
<p></aside>

<p>Device ID used for emulated mouse input from a touchscreen, or for emulated touch input from a mouse. This can be used to distinguish emulated mouse input from physical mouse input, or emulated touch input from physical touch input.</aside>

<p></aside>

</div>
</ul>
