<html>
<head>
    <title>Class PackedColorArray</title>
    <style>
    :root {
        color-scheme: light dark;
        --color-background: #ffffff;
        --color-text: #333333;
        --color-link: #0366d6;
        --color-code-background: #f6f8fa;
        --color-code-text: #24292e;
        --color-aside-background: #f6f8fa;
        --color-aside-border: #dfe2e5;
        --color-header-background: #f6f8fa;
        --color-signature-background: #f1f8ff;
        --font-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
        --font-mono: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
        --font-size-code: 14px;
    }
    
    @media (prefers-color-scheme: dark) {
        :root {
            --color-background: #0d1117;
            --color-text: #c9d1d9;
            --color-link: #58a6ff;
            --color-code-background: #161b22;
            --color-code-text: #c9d1d9;
            --color-aside-background: #161b22;
            --color-aside-border: #30363d;
            --color-header-background: #161b22;
            --color-signature-background: #1d2d3e;
        }
    }
    
    body {
        font-family: var(--font-sans);
        line-height: 1.5;
        color: var(--color-text);
        background-color: var(--color-background);
        margin: 0;
        padding: 20px;
    }
    
    h1, h2, h3 {
        margin-top: 24px;
        margin-bottom: 16px;
        font-weight: 600;
        line-height: 1.25;
    }
    
    h1 {
        font-size: 2em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h2 {
        font-size: 1.5em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h3 {
        font-size: 1.25em;
    }
    
    a {
        color: var(--color-link);
        text-decoration: none;
    }
    
    a:hover {
        text-decoration: underline;
    }
    
    code, pre {
        font-family: var(--font-mono);
        font-size: var(--font-size-code);
    }
    
    pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 16px;
        overflow: auto;
    }
    
    pre code {
        background-color: transparent;
        padding: 0;
    }
    
    .signature {
        background-color: var(--color-signature-background);
        padding: 16px;
        border-radius: 6px;
        margin-bottom: 16px;
    }
    
    .description {
        margin-bottom: 16px;
    }
    
    aside {
        background-color: var(--color-aside-background);
        border-left: 4px solid var(--color-aside-border);
        border-radius: 3px;
        padding: 16px;
        margin-bottom: 16px;
    }
    
    aside .label {
        font-weight: 600;
        margin: 0 0 8px;
    }
    
    .member {
        margin-bottom: 24px;
    }
    
    .enumvalue {
        margin-left: 16px;
    }
    
    .deprecated, .experimental {
        font-weight: 600;
        color: #d73a49;
    }
    
    ul {
        padding-left: 24px;
    }
    
    .signature code, .member code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    .signature pre, .member pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 12px;
        margin: 0;
        overflow: auto;
    }
    
    .signature pre code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    p code, li code {
        background-color: var(--color-code-background);
        border-radius: 3px;
        padding: 2px 4px;
    }
    
    .section-divider {
        border: none;
        border-top: 2px solid var(--color-divider);
        margin: 20px 0;
    }
    </style>
</head>
<body>
<h3 class='secondary'>Class</h3>
<h1>PackedColorArray</h1>
<p>
		A packed array of [Color]s.
	</p>
<hr>
<h2>Description</h2>
<p></aside>

<p>An array specifically designed to hold <a href="godot:Color"><code class='typeref'>Color</code></a>. Packs data tightly, so it saves memory for large array sizes.</aside>

<p><b>Differences between packed arrays, typed arrays, and untyped arrays:</b> Packed arrays are generally faster to iterate on and modify compared to a typed array of the same type (e.g. <a href="godot:PackedColorArray"><code class='typeref'>PackedColorArray</code></a> versus <code>Array<a href="godot:Color"><code class='typeref'>Color</code></a></code>). Also, packed arrays consume less memory. As a downside, packed arrays are less flexible as they don't offer as many convenience methods such as <a href='godot:Array#map'><code class='method'>Array.map</code></a>. Typed arrays are in turn faster to iterate on and modify than untyped arrays.</aside>

<p><aside class='note'><p class='label'>Note:</p> Packed arrays are always passed by reference. To get a copy of an array that can be modified independently of the original array, use <a href='#duplicate'><code class='method'>duplicate</code></a>. This is <i>not</i> the case for built-in properties and methods. The returned packed array of these are a copies, and changing it will <i>not</i> affect the original value. To update a built-in property you need to modify the returned array, and then assign it to the property again.</aside>

<p></aside>

<h2>Topics</h2>
<h3>Methods</h3>
<a id='a-append' name='append'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func append(value: <a href="godot:Color">Color</a>) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Appends an element at the end of the array (alias of <a href='#push_back'><code class='method'>push_back</code></a>).</aside>

<p></aside>

</div>
</div>
<a id='a-append_array' name='append_array'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func append_array(array: <a href="godot:PackedColorArray">PackedColorArray</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Appends a <a href="godot:PackedColorArray"><code class='typeref'>PackedColorArray</code></a> at the end of this array.</aside>

<p></aside>

</div>
</div>
<a id='a-bsearch' name='bsearch'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func bsearch(value: <a href="godot:Color">Color</a>, before: <a href="godot:bool">bool</a> = true) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Finds the index of an existing value (or the insertion index that maintains sorting order, if the value is not yet present in the array) using binary search. Optionally, a <code class='param'>before</code> specifier can be passed. If <code>false</code>, the returned index comes after all existing entries of the value in the array.</aside>

<p><aside class='note'><p class='label'>Note:</p> Calling <a href='#bsearch'><code class='method'>bsearch</code></a> on an unsorted array results in unexpected behavior.</aside>

<p></aside>

</div>
</div>
<a id='a-clear' name='clear'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func clear() -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Clears the array. This is equivalent to using <a href='#resize'><code class='method'>resize</code></a> with a size of <code>0</code>.</aside>

<p></aside>

</div>
</div>
<a id='a-count' name='count'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func count(value: <a href="godot:Color">Color</a>) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns the number of times an element is in the array.</aside>

<p></aside>

</div>
</div>
<a id='a-duplicate' name='duplicate'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func duplicate() -> <a href="godot:PackedColorArray">PackedColorArray</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Creates a copy of the array, and returns it.</aside>

<p></aside>

</div>
</div>
<a id='a-fill' name='fill'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func fill(value: <a href="godot:Color">Color</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Assigns the given value to all elements in the array. This can typically be used together with <a href='#resize'><code class='method'>resize</code></a> to create an array with a given size and initialized elements.</aside>

<p></aside>

</div>
</div>
<a id='a-find' name='find'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func find(value: <a href="godot:Color">Color</a>, from: <a href="godot:int">int</a> = 0) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Searches the array for a value and returns its index or <code>-1</code> if not found. Optionally, the initial search index can be passed.</aside>

<p></aside>

</div>
</div>
<a id='a-has' name='has'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func has(value: <a href="godot:Color">Color</a>) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the array contains <code class='param'>value</code>.</aside>

<p></aside>

</div>
</div>
<a id='a-insert' name='insert'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func insert(at_index: <a href="godot:int">int</a>, value: <a href="godot:Color">Color</a>) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Inserts a new element at a given position in the array. The position must be valid, or at the end of the array (<code>idx == size()</code>).</aside>

<p></aside>

</div>
</div>
<a id='a-is_empty' name='is_empty'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func is_empty() -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if the array is empty.</aside>

<p></aside>

</div>
</div>
<a id='a-push_back' name='push_back'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func push_back(value: <a href="godot:Color">Color</a>) -> <a href="godot:bool">bool</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Appends a value to the array.</aside>

<p></aside>

</div>
</div>
<a id='a-remove_at' name='remove_at'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func remove_at(index: <a href="godot:int">int</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Removes an element from the array by index.</aside>

<p></aside>

</div>
</div>
<a id='a-resize' name='resize'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func resize(new_size: <a href="godot:int">int</a>) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Sets the size of the array. If the array is grown, reserves elements at the end of the array. If the array is shrunk, truncates the array to the new size. Calling <a href='#resize'><code class='method'>resize</code></a> once and assigning the new values is faster than adding new elements one by one.</aside>

<p></aside>

</div>
</div>
<a id='a-reverse' name='reverse'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func reverse() -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Reverses the order of the elements in the array.</aside>

<p></aside>

</div>
</div>
<a id='a-rfind' name='rfind'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func rfind(value: <a href="godot:Color">Color</a>, from: <a href="godot:int">int</a> = -1) -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Searches the array in reverse order. Optionally, a start search index can be passed. If negative, the start index is considered relative to the end of the array.</aside>

<p></aside>

</div>
</div>
<a id='a-set' name='set'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func set(index: <a href="godot:int">int</a>, value: <a href="godot:Color">Color</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Changes the <a href="godot:Color"><code class='typeref'>Color</code></a> at the given index.</aside>

<p></aside>

</div>
</div>
<a id='a-size' name='size'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func size() -> <a href="godot:int">int</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns the number of elements in the array.</aside>

<p></aside>

</div>
</div>
<a id='a-slice' name='slice'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func slice(begin: <a href="godot:int">int</a>, end: <a href="godot:int">int</a> = 2147483647) -> <a href="godot:PackedColorArray">PackedColorArray</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns the slice of the <a href="godot:PackedColorArray"><code class='typeref'>PackedColorArray</code></a>, from <code class='param'>begin</code> (inclusive) to <code class='param'>end</code> (exclusive), as a new <a href="godot:PackedColorArray"><code class='typeref'>PackedColorArray</code></a>.</aside>

<p>The absolute value of <code class='param'>begin</code> and <code class='param'>end</code> will be clamped to the array size, so the default value for <code class='param'>end</code> makes it slice to the size of the array by default (i.e. <code>arr.slice(1)</code> is a shorthand for <code>arr.slice(1, arr.size())</code>).</aside>

<p>If either <code class='param'>begin</code> or <code class='param'>end</code> are negative, they will be relative to the end of the array (i.e. <code>arr.slice(0, -2)</code> is a shorthand for <code>arr.slice(0, arr.size() - 2)</code>).</aside>

<p></aside>

</div>
</div>
<a id='a-sort' name='sort'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func sort() -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Sorts the elements of the array in ascending order.</aside>

<p></aside>

</div>
</div>
<a id='a-to_byte_array' name='to_byte_array'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func to_byte_array() -> <a href="godot:PackedByteArray">PackedByteArray</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns a <a href="godot:PackedByteArray"><code class='typeref'>PackedByteArray</code></a> with each color encoded as bytes.</aside>

<p></aside>

</div>
</div>
<h3>Operators</h3>
<a id='a-operator !=' name='operator !='></a>
<div class='signature'>
<code>
operator !=(right: <a href="godot:PackedColorArray">PackedColorArray</a>)
</code>
</div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if contents of the arrays differ.</aside>

<p></aside>

</div>
<a id='a-operator +' name='operator +'></a>
<div class='signature'>
<code>
operator +(right: <a href="godot:PackedColorArray">PackedColorArray</a>)
</code>
</div>
<div class='description'>
<p></aside>

<p>Returns a new <a href="godot:PackedColorArray"><code class='typeref'>PackedColorArray</code></a> with contents of <code class='param'>right</code> added at the end of this array. For better performance, consider using <a href='#append_array'><code class='method'>append_array</code></a> instead.</aside>

<p></aside>

</div>
<a id='a-operator ==' name='operator =='></a>
<div class='signature'>
<code>
operator ==(right: <a href="godot:PackedColorArray">PackedColorArray</a>)
</code>
</div>
<div class='description'>
<p></aside>

<p>Returns <code>true</code> if contents of both arrays are the same, i.e. they have all equal <a href="godot:Color"><code class='typeref'>Color</code></a>s at the corresponding indices.</aside>

<p></aside>

</div>
<a id='a-operator []' name='operator []'></a>
<div class='signature'>
<code>
operator [](index: <a href="godot:int">int</a>)
</code>
</div>
<div class='description'>
<p></aside>

<p>Returns the <a href="godot:Color"><code class='typeref'>Color</code></a> at index <code class='param'>index</code>. Negative indices can be used to access the elements starting from the end. Using index out of array's bounds will result in an error.</aside>

<p></aside>

</div>
