<html>
<head>
    <title>Class Node2D</title>
    <style>
    :root {
        color-scheme: light dark;
        --color-background: #ffffff;
        --color-text: #333333;
        --color-link: #0366d6;
        --color-code-background: #f6f8fa;
        --color-code-text: #24292e;
        --color-aside-background: #f6f8fa;
        --color-aside-border: #dfe2e5;
        --color-header-background: #f6f8fa;
        --color-signature-background: #f1f8ff;
        --font-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
        --font-mono: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
        --font-size-code: 14px;
    }
    
    @media (prefers-color-scheme: dark) {
        :root {
            --color-background: #0d1117;
            --color-text: #c9d1d9;
            --color-link: #58a6ff;
            --color-code-background: #161b22;
            --color-code-text: #c9d1d9;
            --color-aside-background: #161b22;
            --color-aside-border: #30363d;
            --color-header-background: #161b22;
            --color-signature-background: #1d2d3e;
        }
    }
    
    body {
        font-family: var(--font-sans);
        line-height: 1.5;
        color: var(--color-text);
        background-color: var(--color-background);
        margin: 0;
        padding: 20px;
    }
    
    h1, h2, h3 {
        margin-top: 24px;
        margin-bottom: 16px;
        font-weight: 600;
        line-height: 1.25;
    }
    
    h1 {
        font-size: 2em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h2 {
        font-size: 1.5em;
        padding-bottom: 0.3em;
        border-bottom: 1px solid var(--color-aside-border);
    }
    
    h3 {
        font-size: 1.25em;
    }
    
    a {
        color: var(--color-link);
        text-decoration: none;
    }
    
    a:hover {
        text-decoration: underline;
    }
    
    code, pre {
        font-family: var(--font-mono);
        font-size: var(--font-size-code);
    }
    
    pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 16px;
        overflow: auto;
    }
    
    pre code {
        background-color: transparent;
        padding: 0;
    }
    
    .signature {
        background-color: var(--color-signature-background);
        padding: 16px;
        border-radius: 6px;
        margin-bottom: 16px;
    }
    
    .description {
        margin-bottom: 16px;
    }
    
    aside {
        background-color: var(--color-aside-background);
        border-left: 4px solid var(--color-aside-border);
        border-radius: 3px;
        padding: 16px;
        margin-bottom: 16px;
    }
    
    aside .label {
        font-weight: 600;
        margin: 0 0 8px;
    }
    
    .member {
        margin-bottom: 24px;
    }
    
    .enumvalue {
        margin-left: 16px;
    }
    
    .deprecated, .experimental {
        font-weight: 600;
        color: #d73a49;
    }
    
    ul {
        padding-left: 24px;
    }
    
    .signature code, .member code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    .signature pre, .member pre {
        background-color: var(--color-code-background);
        border-radius: 6px;
        padding: 12px;
        margin: 0;
        overflow: auto;
    }
    
    .signature pre code {
        background-color: transparent;
        padding: 0;
        white-space: pre-wrap;
        word-break: break-all;
    }
    
    p code, li code {
        background-color: var(--color-code-background);
        border-radius: 3px;
        padding: 2px 4px;
    }
    
    .section-divider {
        border: none;
        border-top: 2px solid var(--color-divider);
        margin: 20px 0;
    }
    </style>
</head>
<body>
<h3 class='secondary'>Class</h3>
<h1>Node2D</h1>
<p>
		A 2D game object, inherited by all 2D-related nodes. Has a position, rotation, scale, and Z index.
	</p>
<hr>
<h2>Description</h2>
<p></aside>

<p>A 2D game object, with a transform (position, rotation, and scale). All 2D nodes, including physics objects and sprites, inherit from Node2D. Use Node2D as a parent node to move, scale and rotate children in a 2D project. Also gives control of the node's render order.</aside>

<p></aside>

<h2>Tutorials</h2>
<ul>
    <li><a href="open-external:https://docs.godotengine.org/en/4.2/tutorials/2d/custom_drawing_in_2d.html">Custom drawing in 2D</a>
</ul>
<h2>Topics</h2>
<h3>Properties</h3>
<a id='a-global_position' name='global_position'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_position: <a href="godot:Vector2">Vector2</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Global position.</aside>

<p></aside>

</div>
</div>
<a id='a-global_rotation' name='global_rotation'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_rotation: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Global rotation in radians.</aside>

<p></aside>

</div>
</div>
<a id='a-global_rotation_degrees' name='global_rotation_degrees'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_rotation_degrees: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Helper property to access <a href='#global_rotation'><code class='member'>global_rotation</code></a> in degrees instead of radians.</aside>

<p></aside>

</div>
</div>
<a id='a-global_scale' name='global_scale'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_scale: <a href="godot:Vector2">Vector2</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Global scale.</aside>

<p></aside>

</div>
</div>
<a id='a-global_skew' name='global_skew'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_skew: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Global skew in radians.</aside>

<p></aside>

</div>
</div>
<a id='a-global_transform' name='global_transform'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  global_transform: <a href="godot:Transform2D">Transform2D</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Global <a href="godot:Transform2D"><code class='typeref'>Transform2D</code></a>.</aside>

<p></aside>

</div>
</div>
<a id='a-position' name='position'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  position: <a href="godot:Vector2">Vector2</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Position, relative to the node's parent.</aside>

<p></aside>

</div>
</div>
<a id='a-rotation' name='rotation'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  rotation: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Rotation in radians, relative to the node's parent.</aside>

<p><aside class='note'><p class='label'>Note:</p> This property is edited in the inspector in degrees. If you want to use degrees in a script, use <a href='#rotation_degrees'><code class='member'>rotation_degrees</code></a>.</aside>

<p></aside>

</div>
</div>
<a id='a-rotation_degrees' name='rotation_degrees'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  rotation_degrees: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Helper property to access <a href='#rotation'><code class='member'>rotation</code></a> in degrees instead of radians.</aside>

<p></aside>

</div>
</div>
<a id='a-scale' name='scale'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  scale: <a href="godot:Vector2">Vector2</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>The node's scale. Unscaled value: <code>(1, 1)</code>.</aside>

<p><aside class='note'><p class='label'>Note:</p> Negative X scales in 2D are not decomposable from the transformation matrix. Due to the way scale is represented with transformation matrices in Godot, negative scales on the X axis will be changed to negative scales on the Y axis and a rotation of 180 degrees when decomposed.</aside>

<p></aside>

</div>
</div>
<a id='a-skew' name='skew'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  skew: <a href="godot:float">float</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Slants the node.</aside>

<p><aside class='note'><p class='label'>Note:</p> Skew is X axis only.</aside>

<p></aside>

</div>
</div>
<a id='a-transform' name='transform'></a>
<div class='member'>
  <div class='signature'>
    <code><code>var  transform: <a href="godot:Transform2D">Transform2D</a></code> </code>
  </div>
<div class='description'>
<p></aside>

<p>Local <a href="godot:Transform2D"><code class='typeref'>Transform2D</code></a>.</aside>

<p></aside>

</div>
</div>
<h3>Methods</h3>
<a id='a-apply_scale' name='apply_scale'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func apply_scale(ratio: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Multiplies the current scale by the <code class='param'>ratio</code> vector.</aside>

<p></aside>

</div>
</div>
<a id='a-get_angle_to' name='get_angle_to'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func get_angle_to(point: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:float">float</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns the angle between the node and the <code class='param'>point</code> in radians.</aside>

<p><a href="https://raw.githubusercontent.com/godotengine/godot-docs/master/img/node2d_get_angle_to.png">Illustration of the returned angle.</a></aside>

<p></aside>

</div>
</div>
<a id='a-get_relative_transform_to_parent' name='get_relative_transform_to_parent'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func get_relative_transform_to_parent(parent: <a href="godot:Node">Node</a>) -> <a href="godot:Transform2D">Transform2D</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Returns the <a href="godot:Transform2D"><code class='typeref'>Transform2D</code></a> relative to this node's parent.</aside>

<p></aside>

</div>
</div>
<a id='a-global_translate' name='global_translate'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func global_translate(offset: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Adds the <code class='param'>offset</code> vector to the node's global position.</aside>

<p></aside>

</div>
</div>
<a id='a-look_at' name='look_at'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func look_at(point: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Rotates the node so that its local +X axis points towards the <code class='param'>point</code>, which is expected to use global coordinates.</aside>

<p><code class='param'>point</code> should not be the same as the node's position, otherwise the node always looks to the right.</aside>

<p></aside>

</div>
</div>
<a id='a-move_local_x' name='move_local_x'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func move_local_x(delta: <a href="godot:float">float</a>, scaled: <a href="godot:bool">bool</a> = false) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Applies a local translation on the node's X axis based on the <a href='godot:Node#_process'><code class='method'>Node._process</code></a>'s <code class='param'>delta</code>. If <code class='param'>scaled</code> is <code>false</code>, normalizes the movement.</aside>

<p></aside>

</div>
</div>
<a id='a-move_local_y' name='move_local_y'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func move_local_y(delta: <a href="godot:float">float</a>, scaled: <a href="godot:bool">bool</a> = false) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Applies a local translation on the node's Y axis based on the <a href='godot:Node#_process'><code class='method'>Node._process</code></a>'s <code class='param'>delta</code>. If <code class='param'>scaled</code> is <code>false</code>, normalizes the movement.</aside>

<p></aside>

</div>
</div>
<a id='a-rotate' name='rotate'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func rotate(radians: <a href="godot:float">float</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Applies a rotation to the node, in radians, starting from its current rotation.</aside>

<p></aside>

</div>
</div>
<a id='a-to_global' name='to_global'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func to_global(local_point: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:Vector2">Vector2</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Transforms the provided local position into a position in global coordinate space. The input is expected to be local relative to the <a href="godot:Node2D"><code class='typeref'>Node2D</code></a> it is called on. e.g. Applying this method to the positions of child nodes will correctly transform their positions into the global coordinate space, but applying it to a node's own position will give an incorrect result, as it will incorporate the node's own transformation into its global position.</aside>

<p></aside>

</div>
</div>
<a id='a-to_local' name='to_local'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func to_local(global_point: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:Vector2">Vector2</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Transforms the provided global position into a position in local coordinate space. The output will be local relative to the <a href="godot:Node2D"><code class='typeref'>Node2D</code></a> it is called on. e.g. It is appropriate for determining the positions of child nodes, but it is not appropriate for determining its own position relative to its parent.</aside>

<p></aside>

</div>
</div>
<a id='a-translate' name='translate'></a>
<div class='method'>
  <div class='signature'>
    <code><code>func translate(offset: <a href="godot:Vector2">Vector2</a>) -> <a href="godot:void">void</a>:</code></code>
  </div>
<div class='description'>
<p></aside>

<p>Translates the node by the given <code class='param'>offset</code> in local coordinates.</aside>

<p></aside>

</div>
</div>
